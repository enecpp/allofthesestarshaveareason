namespace allofthesestarshaveareason.Services.Implementations;

using allofthesestarshaveareason.Services.Interfaces;

public class VideoAnalysisOrchestrator(
    IFFmpegService ffmpegService,
    ITranscriptService transcriptService,
    ISceneDetectionService sceneDetectionService)
{
    private async Task ProcessVideoInBackground(Guid jobId, string originalFilePath)
    {
        string audioPath = Path.Combine("uploads", $"{jobId}.wav");
        await ffmpegService.ExtractAudioAsync(originalFilePath, audioPath);
        
        var transcript = await transcriptService.GenerateTranscriptAsync(audioPath);

        string framesDirectory = Path.Combine("uploads", $"{jobId}_frames");
        var framePaths = await ffmpegService.ExtractFramesAsync(originalFilePath, framesDirectory);
        var scenes = await sceneDetectionService.DetectScenesAsync(framePaths);
    }
}}